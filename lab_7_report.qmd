---
title: "lab_7_report"
format: html
editor: visual
---

# Modeling Gravier data with XGBOOST

We do a PCA following directions of Claus O. Wilke

## Download/import libraries including random forest

```{r}
library("tidyverse")
library("tidymodels")
library("kernlab")
library("broom")
```

```{r}
#| eval: true
# Setting up directories
data <- "data/"
raw_dir <- "data/_raw/"
data_file <- "gravier.RData"
data_loc <- "https://github.com/ramhiser/datamicroarray/raw/master/data/"

#Creating raw directory
if( !dir.exists(data) ){
  dir.create(path = data)
}

#Creating raw directory
if( !dir.exists(raw_dir) ){
  dir.create(path = raw_dir)
}

#Downloading datafile
if( !file.exists(str_c(raw_dir, data_file)) ){
  download.file(
    url = str_c(data_loc, data_file),
    destfile = str_c(raw_dir, data_file))
}
load(file = str_c(raw_dir, data_file))
```

```{r}
#The data was cleaned and compressed with gzip
gravier_clean <- gravier |>
  bind_cols() |>
  as_tibble() 

write_tsv(gravier_clean, 
          file = "data/02_gravier_clean.tsv.gz")

gravier_clean <- read_tsv(file = "data/02_gravier_clean.tsv.gz",
                          show_col_types = FALSE)
```

```{r}

#Augmenting data
gravier_clean_aug <- gravier_clean |> 
  relocate(early_metastasis = y)

gravier_scaled <- gravier_clean_aug %>%
  mutate(across(where(is.numeric), ~ as.numeric(scale(.))))

# Split
ratio <- 0.75
split <- as.integer(nrow(gravier_scaled) * ratio)

gravier_train <- gravier_scaled[1:split, ]
gravier_test  <- gravier_scaled[(split + 1):nrow(gravier_scaled), ]

# Make target a factor
gravier_train <- gravier_train %>%
  mutate(early_metastasis = as.factor(early_metastasis))

gravier_test <- gravier_test %>%
  mutate(early_metastasis = as.factor(early_metastasis))

```

```{r}

svm_spec <- svm_poly(
  mode = "classification",
  cost = tune()  
) %>%
  set_engine("kernlab")   
```

```{r}
svm_model <- svm_rbf(mode = "classification") %>%
  set_engine("kernlab")

svm_fit <- svm_model %>%
  fit(early_metastasis ~ ., data = gravier_train)
```

```{r}
svm_preds <- predict(svm_fit, gravier_test) %>%
  bind_cols(gravier_test)
svm_preds %>%
  metrics(truth = early_metastasis, estimate = .pred_class)
svm_preds %>%
  conf_mat(truth = early_metastasis, estimate = .pred_class)

```
